package workshop.akbolatss.xchangesrates.model.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import workshop.akbolatss.xchangesrates.model.dao.GlobalNotification;
import workshop.akbolatss.xchangesrates.model.dao.Snapshot;
import workshop.akbolatss.xchangesrates.model.dao.SnapshotChart;
import workshop.akbolatss.xchangesrates.model.dao.SnapshotInfo;
import workshop.akbolatss.xchangesrates.model.dao.SnapshotNotification;

import workshop.akbolatss.xchangesrates.model.dao.GlobalNotificationDao;
import workshop.akbolatss.xchangesrates.model.dao.SnapshotDao;
import workshop.akbolatss.xchangesrates.model.dao.SnapshotChartDao;
import workshop.akbolatss.xchangesrates.model.dao.SnapshotInfoDao;
import workshop.akbolatss.xchangesrates.model.dao.SnapshotNotificationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig globalNotificationDaoConfig;
    private final DaoConfig snapshotDaoConfig;
    private final DaoConfig snapshotChartDaoConfig;
    private final DaoConfig snapshotInfoDaoConfig;
    private final DaoConfig snapshotNotificationDaoConfig;

    private final GlobalNotificationDao globalNotificationDao;
    private final SnapshotDao snapshotDao;
    private final SnapshotChartDao snapshotChartDao;
    private final SnapshotInfoDao snapshotInfoDao;
    private final SnapshotNotificationDao snapshotNotificationDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        globalNotificationDaoConfig = daoConfigMap.get(GlobalNotificationDao.class).clone();
        globalNotificationDaoConfig.initIdentityScope(type);

        snapshotDaoConfig = daoConfigMap.get(SnapshotDao.class).clone();
        snapshotDaoConfig.initIdentityScope(type);

        snapshotChartDaoConfig = daoConfigMap.get(SnapshotChartDao.class).clone();
        snapshotChartDaoConfig.initIdentityScope(type);

        snapshotInfoDaoConfig = daoConfigMap.get(SnapshotInfoDao.class).clone();
        snapshotInfoDaoConfig.initIdentityScope(type);

        snapshotNotificationDaoConfig = daoConfigMap.get(SnapshotNotificationDao.class).clone();
        snapshotNotificationDaoConfig.initIdentityScope(type);

        globalNotificationDao = new GlobalNotificationDao(globalNotificationDaoConfig, this);
        snapshotDao = new SnapshotDao(snapshotDaoConfig, this);
        snapshotChartDao = new SnapshotChartDao(snapshotChartDaoConfig, this);
        snapshotInfoDao = new SnapshotInfoDao(snapshotInfoDaoConfig, this);
        snapshotNotificationDao = new SnapshotNotificationDao(snapshotNotificationDaoConfig, this);

        registerDao(GlobalNotification.class, globalNotificationDao);
        registerDao(Snapshot.class, snapshotDao);
        registerDao(SnapshotChart.class, snapshotChartDao);
        registerDao(SnapshotInfo.class, snapshotInfoDao);
        registerDao(SnapshotNotification.class, snapshotNotificationDao);
    }
    
    public void clear() {
        globalNotificationDaoConfig.clearIdentityScope();
        snapshotDaoConfig.clearIdentityScope();
        snapshotChartDaoConfig.clearIdentityScope();
        snapshotInfoDaoConfig.clearIdentityScope();
        snapshotNotificationDaoConfig.clearIdentityScope();
    }

    public GlobalNotificationDao getGlobalNotificationDao() {
        return globalNotificationDao;
    }

    public SnapshotDao getSnapshotDao() {
        return snapshotDao;
    }

    public SnapshotChartDao getSnapshotChartDao() {
        return snapshotChartDao;
    }

    public SnapshotInfoDao getSnapshotInfoDao() {
        return snapshotInfoDao;
    }

    public SnapshotNotificationDao getSnapshotNotificationDao() {
        return snapshotNotificationDao;
    }

}
