package workshop.akbolatss.xchangesrates.model.dao;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig chartDataDaoConfig;
    private final DaoConfig chartDataInfoDaoConfig;
    private final DaoConfig chartDataChartsDaoConfig;
    private final DaoConfig notificationDaoConfig;

    private final ChartDataDao chartDataDao;
    private final ChartDataInfoDao chartDataInfoDao;
    private final ChartDataChartsDao chartDataChartsDao;
    private final NotificationDao notificationDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        chartDataDaoConfig = daoConfigMap.get(ChartDataDao.class).clone();
        chartDataDaoConfig.initIdentityScope(type);

        chartDataInfoDaoConfig = daoConfigMap.get(ChartDataInfoDao.class).clone();
        chartDataInfoDaoConfig.initIdentityScope(type);

        chartDataChartsDaoConfig = daoConfigMap.get(ChartDataChartsDao.class).clone();
        chartDataChartsDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        chartDataDao = new ChartDataDao(chartDataDaoConfig, this);
        chartDataInfoDao = new ChartDataInfoDao(chartDataInfoDaoConfig, this);
        chartDataChartsDao = new ChartDataChartsDao(chartDataChartsDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);

        registerDao(ChartData.class, chartDataDao);
        registerDao(ChartDataInfo.class, chartDataInfoDao);
        registerDao(ChartDataCharts.class, chartDataChartsDao);
        registerDao(Notification.class, notificationDao);
    }
    
    public void clear() {
        chartDataDaoConfig.clearIdentityScope();
        chartDataInfoDaoConfig.clearIdentityScope();
        chartDataChartsDaoConfig.clearIdentityScope();
        notificationDaoConfig.clearIdentityScope();
    }

    public ChartDataDao getChartDataDao() {
        return chartDataDao;
    }

    public ChartDataInfoDao getChartDataInfoDao() {
        return chartDataInfoDao;
    }

    public ChartDataChartsDao getChartDataChartsDao() {
        return chartDataChartsDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

}
